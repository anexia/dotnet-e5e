#nullable enable
Anexia.E5E.Abstractions.IConsoleAbstraction
Anexia.E5E.Abstractions.IConsoleAbstraction.Close() -> void
Anexia.E5E.Abstractions.IConsoleAbstraction.Open() -> void
Anexia.E5E.Abstractions.IConsoleAbstraction.ReadLineFromStdinAsync(System.Threading.CancellationToken token = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<string?>!
Anexia.E5E.Abstractions.IConsoleAbstraction.WriteToStderrAsync(string? s) -> System.Threading.Tasks.Task!
Anexia.E5E.Abstractions.IConsoleAbstraction.WriteToStdoutAsync(string? s) -> System.Threading.Tasks.Task!
Anexia.E5E.Abstractions.ConsoleAbstraction
Anexia.E5E.Abstractions.ConsoleAbstraction.ConsoleAbstraction() -> void
Anexia.E5E.Abstractions.ConsoleAbstraction.Open() -> void
Anexia.E5E.Abstractions.ConsoleAbstraction.Close() -> void
Anexia.E5E.Abstractions.ConsoleAbstraction.Dispose() -> void
Anexia.E5E.Abstractions.ConsoleAbstraction.DisposeAsync() -> System.Threading.Tasks.ValueTask
Anexia.E5E.Abstractions.ConsoleAbstraction.ReadLineFromStdinAsync(System.Threading.CancellationToken token = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<string?>!
Anexia.E5E.Abstractions.ConsoleAbstraction.WriteToStderrAsync(string? s) -> System.Threading.Tasks.Task!
Anexia.E5E.Abstractions.ConsoleAbstraction.WriteToStdoutAsync(string? s) -> System.Threading.Tasks.Task!
Anexia.E5E.Exceptions.E5EEntrypointAlreadyRegisteredException
Anexia.E5E.Exceptions.E5EEntrypointAlreadyRegisteredException.Entrypoint.get -> string!
Anexia.E5E.Exceptions.E5EException
Anexia.E5E.Exceptions.E5EFailedDeserializationException
Anexia.E5E.Exceptions.E5EFailedDeserializationException.Line.get -> string!
Anexia.E5E.Exceptions.E5EFailedSerializationException
Anexia.E5E.Exceptions.E5EFunctionExecutionFailedException
Anexia.E5E.Exceptions.E5EFunctionExecutionFailedException.Request.get -> Anexia.E5E.Functions.E5ERequest!
Anexia.E5E.Exceptions.E5EInvalidConversionException
Anexia.E5E.Exceptions.E5EInvalidConversionException.Actual.get -> Anexia.E5E.Functions.E5ERequestDataType
Anexia.E5E.Exceptions.E5EInvalidConversionException.Expected.get -> Anexia.E5E.Functions.E5ERequestDataType
Anexia.E5E.Exceptions.E5EMissingArgumentsException
Anexia.E5E.Exceptions.E5EMissingEntrypointException
Anexia.E5E.Exceptions.E5EMissingEntrypointException.Entrypoint.get -> string!
Anexia.E5E.Exceptions.E5ERuntimeException
Anexia.E5E.Extensions.HostExtensions
Anexia.E5E.Extensions.ServiceCollectionHostedServiceExtensions
Anexia.E5E.Functions.E5EEvent
Anexia.E5E.Functions.E5EEvent.As<TValue>(System.Text.Json.JsonSerializerOptions? options = null) -> TValue?
Anexia.E5E.Functions.E5EEvent.AsBytes() -> System.Collections.Generic.IEnumerable<byte>?
Anexia.E5E.Functions.E5EEvent.AsText() -> string?
Anexia.E5E.Functions.E5EEvent.Data.get -> System.Text.Json.JsonElement?
Anexia.E5E.Functions.E5EEvent.Data.init -> void
Anexia.E5E.Functions.E5EEvent.E5EEvent(Anexia.E5E.Functions.E5ERequestDataType Type, System.Text.Json.JsonElement? Data = null, Anexia.E5E.Functions.E5EHttpHeaders? RequestHeaders = null, Anexia.E5E.Functions.E5ERequestParameters? Params = null) -> void
Anexia.E5E.Functions.E5EEvent.Params.get -> Anexia.E5E.Functions.E5ERequestParameters?
Anexia.E5E.Functions.E5EEvent.Params.init -> void
Anexia.E5E.Functions.E5EEvent.RequestHeaders.get -> Anexia.E5E.Functions.E5EHttpHeaders?
Anexia.E5E.Functions.E5EEvent.RequestHeaders.init -> void
Anexia.E5E.Functions.E5EEvent.Type.get -> Anexia.E5E.Functions.E5ERequestDataType
Anexia.E5E.Functions.E5EEvent.Type.init -> void
Anexia.E5E.Functions.E5EHttpHeaders
Anexia.E5E.Functions.E5EHttpHeaders.E5EHttpHeaders() -> void
Anexia.E5E.Functions.E5EHttpHeaders.TryGetValue(string! name, out string? header) -> bool
Anexia.E5E.Functions.E5ERequest
Anexia.E5E.Functions.E5ERequest.Context.get -> Anexia.E5E.Functions.E5EContext!
Anexia.E5E.Functions.E5ERequest.Context.init -> void
Anexia.E5E.Functions.E5ERequest.E5ERequest(Anexia.E5E.Functions.E5EEvent! Event, Anexia.E5E.Functions.E5EContext! Context) -> void
Anexia.E5E.Functions.E5ERequest.Event.get -> Anexia.E5E.Functions.E5EEvent!
Anexia.E5E.Functions.E5ERequest.Event.init -> void
Anexia.E5E.Functions.E5EContext
Anexia.E5E.Functions.E5EContext.Date.get -> System.DateTimeOffset
Anexia.E5E.Functions.E5EContext.Date.init -> void
Anexia.E5E.Functions.E5EContext.E5EContext(string! type, System.DateTimeOffset date, bool isAsynchronous, System.Text.Json.JsonElement? data = null) -> void
Anexia.E5E.Functions.E5EContext.IsAsynchronous.get -> bool
Anexia.E5E.Functions.E5EContext.IsAsynchronous.init -> void
Anexia.E5E.Functions.E5EContext.Type.get -> string!
Anexia.E5E.Functions.E5EContext.Type.init -> void
Anexia.E5E.Functions.E5EContext.Data.get -> System.Text.Json.JsonElement?
Anexia.E5E.Functions.E5EContext.Data.init -> void
Anexia.E5E.Functions.E5ERequestDataType
Anexia.E5E.Functions.E5ERequestDataType.Binary = 1 -> Anexia.E5E.Functions.E5ERequestDataType
Anexia.E5E.Functions.E5ERequestDataType.Mixed = 3 -> Anexia.E5E.Functions.E5ERequestDataType
Anexia.E5E.Functions.E5ERequestDataType.StructuredObject = 2 -> Anexia.E5E.Functions.E5ERequestDataType
Anexia.E5E.Functions.E5ERequestDataType.Text = 0 -> Anexia.E5E.Functions.E5ERequestDataType
Anexia.E5E.Functions.E5ERequestParameters
Anexia.E5E.Functions.E5ERequestParameters.E5ERequestParameters() -> void
Anexia.E5E.Functions.E5EResponse
Anexia.E5E.Functions.E5EResponse.Data.get -> System.Text.Json.JsonElement
Anexia.E5E.Functions.E5EResponse.Data.init -> void
Anexia.E5E.Functions.E5EResponse.E5EResponse() -> void
Anexia.E5E.Functions.E5EResponse.ResponseHeaders.get -> Anexia.E5E.Functions.E5EHttpHeaders?
Anexia.E5E.Functions.E5EResponse.ResponseHeaders.init -> void
Anexia.E5E.Functions.E5EResponse.Status.get -> System.Net.HttpStatusCode?
Anexia.E5E.Functions.E5EResponse.Status.init -> void
Anexia.E5E.Functions.E5EResponse.Type.get -> Anexia.E5E.Functions.E5EResponseType
Anexia.E5E.Functions.E5EResponse.Type.init -> void
Anexia.E5E.Functions.E5EResponseType
Anexia.E5E.Functions.E5EResponseType.Binary = 1 -> Anexia.E5E.Functions.E5EResponseType
Anexia.E5E.Functions.E5EResponseType.StructuredObject = 2 -> Anexia.E5E.Functions.E5EResponseType
Anexia.E5E.Functions.E5EResponseType.Text = 0 -> Anexia.E5E.Functions.E5EResponseType
Anexia.E5E.Functions.IE5EFunctionHandler
Anexia.E5E.Functions.IE5EFunctionHandler.HandleAsync(Anexia.E5E.Functions.E5ERequest! request, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Anexia.E5E.Functions.E5EResponse!>!
Anexia.E5E.Runtime.E5ERuntimeMetadata
Anexia.E5E.Runtime.E5ERuntimeOptions
Anexia.E5E.Runtime.E5ERuntimeOptions.DaemonExecutionTerminationSequence.get -> string!
Anexia.E5E.Runtime.E5ERuntimeOptions.DaemonExecutionTerminationSequence.init -> void
Anexia.E5E.Runtime.E5ERuntimeOptions.E5ERuntimeOptions(string! Entrypoint, string! StdoutTerminationSequence, string! DaemonExecutionTerminationSequence, bool KeepAlive) -> void
Anexia.E5E.Runtime.E5ERuntimeOptions.Entrypoint.get -> string!
Anexia.E5E.Runtime.E5ERuntimeOptions.Entrypoint.init -> void
Anexia.E5E.Runtime.E5ERuntimeOptions.KeepAlive.get -> bool
Anexia.E5E.Runtime.E5ERuntimeOptions.KeepAlive.init -> void
Anexia.E5E.Runtime.E5ERuntimeOptions.StdoutTerminationSequence.get -> string!
Anexia.E5E.Runtime.E5ERuntimeOptions.StdoutTerminationSequence.init -> void
Anexia.E5E.Serialization.E5EJsonSerializerOptions
static Anexia.E5E.Functions.E5EResponse.From<T>(T! cls, System.Net.HttpStatusCode? status = null, Anexia.E5E.Functions.E5EHttpHeaders? responseHeaders = null) -> Anexia.E5E.Functions.E5EResponse!
static Anexia.E5E.Serialization.E5EJsonSerializerOptions.Default.get -> System.Text.Json.JsonSerializerOptions!
Anexia.E5E.Runtime.E5ERuntimeMetadata.Features.get -> System.Collections.Generic.IReadOnlyList<string!>!
Anexia.E5E.Runtime.E5ERuntimeMetadata.LibraryVersion.get -> string!
Anexia.E5E.Runtime.E5ERuntimeMetadata.Runtime.get -> string!
Anexia.E5E.Runtime.E5ERuntimeMetadata.RuntimeVersion.get -> string!
static readonly Anexia.E5E.Runtime.E5ERuntimeMetadata.Current -> Anexia.E5E.Runtime.E5ERuntimeMetadata!
Anexia.E5E.Extensions.HostBuilderExtensions
static Anexia.E5E.Extensions.HostBuilderExtensions.UseAnexiaE5E(this Microsoft.Extensions.Hosting.IHostBuilder! hb, string![]? args, System.Action<Anexia.E5E.Abstractions.IE5EEntrypointBuilder!>! configure) -> Microsoft.Extensions.Hosting.IHostBuilder!
static Anexia.E5E.Extensions.HostBuilderExtensions.UseAnexiaE5E(this Microsoft.Extensions.Hosting.IHostBuilder! hb, System.Action<Anexia.E5E.Abstractions.IE5EEntrypointBuilder!>! configure) -> Microsoft.Extensions.Hosting.IHostBuilder!
Anexia.E5E.Abstractions.IE5EEntrypointBuilder
Anexia.E5E.Abstractions.IE5EEntrypointBuilder.BuildResolver() -> Anexia.E5E.Abstractions.IE5EEntrypointResolver!
Anexia.E5E.Abstractions.IE5EEntrypointBuilder.RegisterEntrypoint(string! entrypoint, Anexia.E5E.Functions.IE5EFunctionHandler! handler) -> void
Anexia.E5E.Abstractions.IE5EEntrypointBuilder.RegisterEntrypoint(string! entrypoint, System.Func<Anexia.E5E.Functions.E5ERequest!, System.Threading.Tasks.Task<Anexia.E5E.Functions.E5EResponse!>!>! func) -> void
Anexia.E5E.Abstractions.IE5EEntrypointBuilder.RegisterEntrypoint(string! entrypoint, System.Type! handlerType) -> void
Anexia.E5E.Abstractions.IE5EEntrypointBuilder.RegisterEntrypoint<T>(string! entrypoint) -> void
Anexia.E5E.Abstractions.IE5EEntrypointResolver
Anexia.E5E.Abstractions.IE5EEntrypointResolver.Resolve(System.IServiceProvider! services) -> Anexia.E5E.Functions.IE5EFunctionHandler!
